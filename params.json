{"name":"Futuroid","tagline":"","body":"Futuroid - Android library for asynchronous tasks\r\n=================================================\r\nFuturoid is an Android library that allows running asynchronous tasks and attaching callbacks thanks to a convenient syntax. It offers an alternative to the Android [AsyncTask][1] class.\r\n\r\nFeatures\r\n--------\r\n\r\n- Future-based API (similar to Guava's ListenableFutures, Scala/Akka Futures, Javascript promises...)\r\n- Allows registering callbacks to be run on the Android UI/main thread\r\n- Provides a default ExecutorService (fixed thread pool with 5 threads)\r\n- Each task can be run on the default ExecutorService or on a custom one\r\n- Allows task chaining (sample code to be added...)\r\n- Functional language friendly\r\n \r\n\r\nSample code\r\n-----------\r\n\r\nImage download asynchronous service:\r\n\r\n    public class DownloadService {\r\n        \r\n        /**\r\n         * Downloads an image asynchronously.\r\n         */\r\n        public Future<Bitmap> downloadImage(String url) {\r\n            return Async.submit(new Callable<Bitmap>() {\r\n                @Override\r\n                public Thread call() {\r\n                    Bitmap bitmap;\r\n                    \r\n                    // HTTP request goes here...\r\n                    \r\n                    return bitmap;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\nClient code:\r\n\r\n    // download an image from a URL\r\n    imageService.downloadImage(url).addUiCallback(new FutureCallback<Bitmap>() {\r\n        @Override\r\n        public void onSuccess(Bitmap bitmap) {\r\n            // display the image\r\n            imageView.setImageBitmap(bitmap);\r\n        }\r\n\r\n        @Override\r\n        public void onFailure(Throwable t) {\r\n            Log.e(TAG, \"Unable to download image\", t);\r\n        }\r\n    });\r\n\r\nCurrent status\r\n--------------\r\nFuturoid is in its early stage of development and should not be used in production code yet. \r\nThe public API is not stable and may change without notice until version 1.0.0 is released.\r\n\r\nAdding Futuroid to your project\r\n-------------------------------\r\nFuturoid is available on the [Maven Central Repository][2].\r\n\r\nMaven-based configuration:\r\n\r\n    <dependency>\r\n        <groupId>com.github.clemp6r.futuroid</groupId>\r\n        <artifactId>futuroid</artifactId>\r\n        <version>0.1</version>\r\n    </dependency>\r\n\r\nGradle-based configuration:\r\n\r\n    dependencies {\r\n        compile 'com.github.clemp6r.futuroid:futuroid:0.1'\r\n    }\r\n\r\n[![Build Status](https://travis-ci.org/clemp6r/futuroid.svg?branch=master)](https://travis-ci.org/clemp6r/futuroid)\r\n\r\n  [1]: http://developer.android.com/reference/android/os/AsyncTask.html\r\n  [2]: http://search.maven.org/#search%7Cga%7C1%7Cg:%22com.github.clemp6r.futuroid%22","google":"UA-49524555-1","note":"Don't delete this file! It's used internally to help with page regeneration."}